<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="nb-hdu" failures="0" tests="88" name="Surefire test" time="9.644" errors="0" timestamp="2024-01-10T23:52:06 CET">
  <testcase classname="com.deque.axe.android.AxeDeviceTest" name="construct on construct(com.deque.axe.android.AxeDeviceTest)" time="0.005"/>
  <testcase classname="com.deque.axe.android.AxeResultTest" name="test_QueryOnlyViolations on test_QueryOnlyViolations(com.deque.axe.android.AxeResultTest)" time="0.002"/>
  <testcase classname="com.deque.axe.android.AxeTest" name="axeViewJsonTest on axeViewJsonTest(com.deque.axe.android.AxeTest)" time="0.732"/>
  <testcase classname="com.deque.axe.android.AxeTest" name="testDefaultConfig on testDefaultConfig(com.deque.axe.android.AxeTest)" time="0.929"/>
  <testcase classname="com.deque.axe.android.AxeTest" name="testIgnoreMultipleRules on testIgnoreMultipleRules(com.deque.axe.android.AxeTest)" time="0.93"/>
  <testcase classname="com.deque.axe.android.AxeTest" name="testRun on testRun(com.deque.axe.android.AxeTest)" time="0.955"/>
  <testcase classname="com.deque.axe.android.AxeTest" name="jsonAxeRuleResultTestSpecs on jsonAxeRuleResultTestSpecs(com.deque.axe.android.AxeTest)" time="2.055"/>
  <testcase classname="com.deque.axe.android.AxeTest" name="axeMetaDataJsonTest on axeMetaDataJsonTest(com.deque.axe.android.AxeTest)" time="2.158"/>
  <testcase classname="com.deque.axe.android.AxeTest" name="testThrownException on testThrownException(com.deque.axe.android.AxeTest)" time="2.169"/>
  <testcase classname="com.deque.axe.android.AxeTest" name="testIgnoreRule on testIgnoreRule(com.deque.axe.android.AxeTest)" time="2.169"/>
  <testcase classname="com.deque.axe.android.AxeTest" name="tesAxeConf on tesAxeConf(com.deque.axe.android.AxeTest)" time="2.17"/>
  <testcase classname="com.deque.axe.android.AxeTest" name="testOneStandardAndOneRule on testOneStandardAndOneRule(com.deque.axe.android.AxeTest)" time="2.17"/>
  <testcase classname="com.deque.axe.android.AxeTest" name="testRuleSize on testRuleSize(com.deque.axe.android.AxeTest)" time="2.17"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="calculateProps_switch on calculateProps_switch(com.deque.axe.android.AxeViewTest)" time="0.028"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="screenTitle_basic on screenTitle_basic(com.deque.axe.android.AxeViewTest)" time="0.028"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="calculatedProps_ImageView on calculatedProps_ImageView(com.deque.axe.android.AxeViewTest)" time="0.029"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="isNotRendered on isNotRendered(com.deque.axe.android.AxeViewTest)" time="0.03"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="screenTitle_noContentView on screenTitle_noContentView(com.deque.axe.android.AxeViewTest)" time="0.03"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="calculateProps_offScreenAxeView on calculateProps_offScreenAxeView(com.deque.axe.android.AxeViewTest)" time="0.03"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="isRendered on isRendered(com.deque.axe.android.AxeViewTest)" time="0.03"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="isOffScreen_viewInsideScreen_returnsFalse on isOffScreen_viewInsideScreen_returnsFalse(com.deque.axe.android.AxeViewTest)" time="0.03"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="calculateProps_offScreenAndObscuredAxeView on calculateProps_offScreenAndObscuredAxeView(com.deque.axe.android.AxeViewTest)" time="0.03"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="isOffScreen_viewInScreen_returnsFalse on isOffScreen_viewInScreen_returnsFalse(com.deque.axe.android.AxeViewTest)" time="0.03"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="query on query(com.deque.axe.android.AxeViewTest)" time="0.032"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="calculateProps_editText on calculateProps_editText(com.deque.axe.android.AxeViewTest)" time="0.05"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="calculateProps_Button on calculateProps_Button(com.deque.axe.android.AxeViewTest)" time="0.05"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="isOffScreen_viewOutOfScreen_returnsTrue on isOffScreen_viewOutOfScreen_returnsTrue(com.deque.axe.android.AxeViewTest)" time="0.05"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="calculateProps_noContentDescription_editText on calculateProps_noContentDescription_editText(com.deque.axe.android.AxeViewTest)" time="0.05"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="isPartiallyVisible_buttonIsNotOffScreen_returnsFalse on isPartiallyVisible_buttonIsNotOffScreen_returnsFalse(com.deque.axe.android.AxeViewTest)" time="0.051"/>
  <testcase classname="com.deque.axe.android.AxeViewTest" name="calculateProps_obscuredAxeView on calculateProps_obscuredAxeView(com.deque.axe.android.AxeViewTest)" time="0.052"/>
  <testcase classname="com.deque.axe.android.ColorContrastTests" name="example_withActualTextColor_ManualTestingRequired on example_withActualTextColor_ManualTestingRequired(com.deque.axe.android.ColorContrastTests)" time="0.135"/>
  <testcase classname="com.deque.axe.android.ColorContrastTests" name="imageTest_intellijCapture on imageTest_intellijCapture(com.deque.axe.android.ColorContrastTests)" time="0.182"/>
  <testcase classname="com.deque.axe.android.ColorContrastTests" name="example_Inaccessible on example_Inaccessible(com.deque.axe.android.ColorContrastTests)" time="0.251"/>
  <testcase classname="com.deque.axe.android.ColorContrastTests" name="imageTest_largeWhiteTextBlueBackground on imageTest_largeWhiteTextBlueBackground(com.deque.axe.android.ColorContrastTests)" time="0.285"/>
  <testcase classname="com.deque.axe.android.ColorContrastTests" name="imageTest_textWithIcon on imageTest_textWithIcon(com.deque.axe.android.ColorContrastTests)" time="0.3"/>
  <testcase classname="com.deque.axe.android.ColorContrastTests" name="example_Accessible on example_Accessible(com.deque.axe.android.ColorContrastTests)" time="0.335"/>
  <testcase classname="com.deque.axe.android.ColorContrastTests" name="imageTest_textOnlyAtTop on imageTest_textOnlyAtTop(com.deque.axe.android.ColorContrastTests)" time="4.212"/>
  <testcase classname="com.deque.axe.android.ColorContrastTests" name="imageTest_intellijCaptureHard on imageTest_intellijCaptureHard(com.deque.axe.android.ColorContrastTests)" time="4.307"/>
  <testcase classname="com.deque.axe.android.ColorContrastTests" name="example_ManualTestingRequired on example_ManualTestingRequired(com.deque.axe.android.ColorContrastTests)" time="4.391"/>
  <testcase classname="com.deque.axe.android.ColorContrastTests" name="imageTest_whiteTextBlueBackground on imageTest_whiteTextBlueBackground(com.deque.axe.android.ColorContrastTests)" time="4.414"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.ActiveViewNameTest" name="speakableTextEmpty_runRule on speakableTextEmpty_runRule(com.deque.axe.android.rules.hierarchy.ActiveViewNameTest)" time="2.762"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.ActiveViewNameTest" name="isApplicable_classNameIsSwitch on isApplicable_classNameIsSwitch(com.deque.axe.android.rules.hierarchy.ActiveViewNameTest)" time="2.765"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.ActiveViewNameTest" name="viewNotClickable_runRule on viewNotClickable_runRule(com.deque.axe.android.rules.hierarchy.ActiveViewNameTest)" time="2.767"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.ActiveViewNameTest" name="isApplicable_classNameIsCheckBox on isApplicable_classNameIsCheckBox(com.deque.axe.android.rules.hierarchy.ActiveViewNameTest)" time="2.769"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.ActiveViewNameTest" name="isApplicable_overridesAccessibilityDelegate_returnsFalse on isApplicable_overridesAccessibilityDelegate_returnsFalse(com.deque.axe.android.rules.hierarchy.ActiveViewNameTest)" time="2.772"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.ActiveViewNameTest" name="runRule on runRule(com.deque.axe.android.rules.hierarchy.ActiveViewNameTest)" time="2.775"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.ActiveViewNameTest" name="isApplicable_classNameIsButton on isApplicable_classNameIsButton(com.deque.axe.android.rules.hierarchy.ActiveViewNameTest)" time="2.778"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.CheckBoxNameTest" name="visibleTextEmpty_labelIsEmpty_runRule on visibleTextEmpty_labelIsEmpty_runRule(com.deque.axe.android.rules.hierarchy.CheckBoxNameTest)" time="0.004"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.CheckBoxNameTest" name="overRidesAccessibilityDelegate_returnsFalse on overRidesAccessibilityDelegate_returnsFalse(com.deque.axe.android.rules.hierarchy.CheckBoxNameTest)" time="0.007"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.CheckBoxNameTest" name="visibleTextNotEmpty_labelEmpty_runRule on visibleTextNotEmpty_labelEmpty_runRule(com.deque.axe.android.rules.hierarchy.CheckBoxNameTest)" time="0.01"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.CheckBoxNameTest" name="visibleTextEmpty_labelNotEmpty_runRule on visibleTextEmpty_labelNotEmpty_runRule(com.deque.axe.android.rules.hierarchy.CheckBoxNameTest)" time="0.019"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.CheckBoxNameTest" name="visibleTextNotEmpty_labelNotEmpty_runRule on visibleTextNotEmpty_labelNotEmpty_runRule(com.deque.axe.android.rules.hierarchy.CheckBoxNameTest)" time="0.022"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.EditTextNameTest" name="overRidesAccessibilityDelegate_returnsFalse on overRidesAccessibilityDelegate_returnsFalse(com.deque.axe.android.rules.hierarchy.EditTextNameTest)" time="0.003"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.EditTextNameTest" name="labelIsNotNullOrEmpty_runRule on labelIsNotNullOrEmpty_runRule(com.deque.axe.android.rules.hierarchy.EditTextNameTest)" time="0.004"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.EditTextNameTest" name="labelIsEmpty_runRule on labelIsEmpty_runRule(com.deque.axe.android.rules.hierarchy.EditTextNameTest)" time="0.004"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.EditTextValueTest" name="overRidesAccessibilityDelegate_returnsFalse on overRidesAccessibilityDelegate_returnsFalse(com.deque.axe.android.rules.hierarchy.EditTextValueTest)" time="0.004"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.EditTextValueTest" name="emptyContentDescription_runRule on emptyContentDescription_runRule(com.deque.axe.android.rules.hierarchy.EditTextValueTest)" time="0.006"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.EditTextValueTest" name="editTextClass_isApplicable on editTextClass_isApplicable(com.deque.axe.android.rules.hierarchy.EditTextValueTest)" time="0.007"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.EditTextValueTest" name="editTextClass_overridesAccessibilityDelegate_notApplicable on editTextClass_overridesAccessibilityDelegate_notApplicable(com.deque.axe.android.rules.hierarchy.EditTextValueTest)" time="0.01"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.EditTextValueTest" name="switchClass_isApplicable on switchClass_isApplicable(com.deque.axe.android.rules.hierarchy.EditTextValueTest)" time="0.011"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.EditTextValueTest" name="nonEmptyContentDescription_runRule on nonEmptyContentDescription_runRule(com.deque.axe.android.rules.hierarchy.EditTextValueTest)" time="0.012"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.ImageViewNameTest" name="imageViewClass_overridesAccessibilityDelegate_notApplicable on imageViewClass_overridesAccessibilityDelegate_notApplicable(com.deque.axe.android.rules.hierarchy.ImageViewNameTest)" time="0.003"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.ImageViewNameTest" name="imageViewClass_isApplicable on imageViewClass_isApplicable(com.deque.axe.android.rules.hierarchy.ImageViewNameTest)" time="0.004"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.ImageViewNameTest" name="isNotImportantForAccessibility_runRule on isNotImportantForAccessibility_runRule(com.deque.axe.android.rules.hierarchy.ImageViewNameTest)" time="0.005"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.ImageViewNameTest" name="isImportantForAccessibilityNonEmptyContentDesc_runRule on isImportantForAccessibilityNonEmptyContentDesc_runRule(com.deque.axe.android.rules.hierarchy.ImageViewNameTest)" time="0.007"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.ImageViewNameTest" name="isImportantForAccessibilityEmptyContentDesc_runRule on isImportantForAccessibilityEmptyContentDesc_runRule(com.deque.axe.android.rules.hierarchy.ImageViewNameTest)" time="0.008"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.ImageViewNameTest" name="switchClass_isApplicable on switchClass_isApplicable(com.deque.axe.android.rules.hierarchy.ImageViewNameTest)" time="0.009"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.SwitchNameTest" name="visibleTextEmpty_labelIsEmpty_runRule on visibleTextEmpty_labelIsEmpty_runRule(com.deque.axe.android.rules.hierarchy.SwitchNameTest)" time="0.002"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.SwitchNameTest" name="overRidesAccessibilityDelegate_returnsFalse on overRidesAccessibilityDelegate_returnsFalse(com.deque.axe.android.rules.hierarchy.SwitchNameTest)" time="0.003"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.SwitchNameTest" name="visibleTextNotEmpty_labelEmpty_runRule on visibleTextNotEmpty_labelEmpty_runRule(com.deque.axe.android.rules.hierarchy.SwitchNameTest)" time="0.005"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.SwitchNameTest" name="visibleTextEmpty_labelNotEmpty_runRule on visibleTextEmpty_labelNotEmpty_runRule(com.deque.axe.android.rules.hierarchy.SwitchNameTest)" time="0.006"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.SwitchNameTest" name="visibleTextNotEmpty_labelNotEmpty_runRule on visibleTextNotEmpty_labelNotEmpty_runRule(com.deque.axe.android.rules.hierarchy.SwitchNameTest)" time="0.009"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.TouchSizeWcagTest" name="runRule_expectedSizeLessThanAdjustedHeightAndExpectedSizeLessThanAdjustedWidth on runRule_expectedSizeLessThanAdjustedHeightAndExpectedSizeLessThanAdjustedWidth(com.deque.axe.android.rules.hierarchy.TouchSizeWcagTest)" time="0.056"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.TouchSizeWcagTest" name="overRidesAccessibilityDelegate_returnsFalse on overRidesAccessibilityDelegate_returnsFalse(com.deque.axe.android.rules.hierarchy.TouchSizeWcagTest)" time="0.059"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.TouchSizeWcagTest" name="runRule_isPartiallyVisible on runRule_isPartiallyVisible(com.deque.axe.android.rules.hierarchy.TouchSizeWcagTest)" time="0.062"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.TouchSizeWcagTest" name="runRule_expectedSizeGreaterThanAdjustedHeight on runRule_expectedSizeGreaterThanAdjustedHeight(com.deque.axe.android.rules.hierarchy.TouchSizeWcagTest)" time="0.065"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.TouchSizeWcagTest" name="runRule_isRendered on runRule_isRendered(com.deque.axe.android.rules.hierarchy.TouchSizeWcagTest)" time="0.069"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.TouchSizeWcagTest" name="runRule_isOffScreen on runRule_isOffScreen(com.deque.axe.android.rules.hierarchy.TouchSizeWcagTest)" time="0.072"/>
  <testcase classname="com.deque.axe.android.rules.hierarchy.TouchSizeWcagTest" name="runRule_expectedSizeGreaterThanAdjustedWidth on runRule_expectedSizeGreaterThanAdjustedWidth(com.deque.axe.android.rules.hierarchy.TouchSizeWcagTest)" time="0.075"/>
  <testcase classname="com.deque.axe.android.wrappers.AxeColorTest" name="toHex_Black on toHex_Black(com.deque.axe.android.wrappers.AxeColorTest)" time="0.001"/>
  <testcase classname="com.deque.axe.android.wrappers.AxeColorTest" name="toHex_White on toHex_White(com.deque.axe.android.wrappers.AxeColorTest)" time="0.001"/>
  <testcase classname="com.deque.axe.android.wrappers.AxeColorTest" name="compareTo_different on compareTo_different(com.deque.axe.android.wrappers.AxeColorTest)" time="0.001"/>
  <testcase classname="com.deque.axe.android.wrappers.AxeColorTest" name="compareTo_same on compareTo_same(com.deque.axe.android.wrappers.AxeColorTest)" time="0.001"/>
  <testcase classname="com.deque.axe.android.wrappers.AxeColorTest" name="toHex_Random on toHex_Random(com.deque.axe.android.wrappers.AxeColorTest)" time="0.001"/>
  <testcase classname="com.deque.axe.android.wrappers.AxeRectTest" name="test_NonOrigin on test_NonOrigin(com.deque.axe.android.wrappers.AxeRectTest)" time="0.002"/>
  <testcase classname="com.deque.axe.android.wrappers.AxeRectTest" name="binaryRowSearch on binaryRowSearch(com.deque.axe.android.wrappers.AxeRectTest)" time="0.01"/>
  <testcase classname="com.deque.axe.android.wrappers.AxeRectTest" name="test_EqualityCheck on test_EqualityCheck(com.deque.axe.android.wrappers.AxeRectTest)" time="0.01"/>
  <testcase classname="com.deque.axe.android.wrappers.AxeRectTest" name="testEqualityTest on testEqualityTest(com.deque.axe.android.wrappers.AxeRectTest)" time="0.01"/>
</testsuite> <!-- Surefire test -->
